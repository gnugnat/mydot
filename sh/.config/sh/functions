#!/bin/sh


# POSIX-compatible shell functons


# Check if 1st string contains the 2nd
contains_string() {
    string="${1}"
    substring="${2}"

    if [ "${string#*${substring}}" != "${string}" ]
    then
        # $substring is in $string
        return 0
    else
        # $substring is not in $string
        return 1
    fi
}


# Source a file if it exists
source_file() {
    # shellcheck disable=SC1090
    [ -f "${1}" ] && . "${1}"
}


# This function first checks if specified directory
# already is in path, if it is not and it exists
# it is added to the path
add_to_path() {
    if ! contains_string "${PATH}" "${1}"
    then
        if [ -d "${1}" ]
        then
            export PATH=${PATH}:${1}
        fi
    fi
}


# Add some dirs
setup_path() {
    # Common programs' homes
    add_to_path /bin
    add_to_path /opt/bin
    add_to_path /sbin
    add_to_path /usr/bin
    add_to_path /usr/local/bin
    add_to_path /usr/local/sbin
    add_to_path /usr/sbin

    # User's programs
    add_to_path "${HOME}/.bin"
    add_to_path "${HOME}/.local/share/bin"

    # Cabal (Haskell)
    add_to_path "${HOME}/.cabal/bin"

    # Cargo (Rust)
    add_to_path "${HOME}/.cargo/bin"

    # GO
    add_to_path "${HOME}/go/bin"

    # Node
    add_to_path "${HOME}/.npm/bin"

    # Python
    add_to_path "${HOME}/.local/bin"
}


# CD aliases
# ${1} - alias name
# ${2} - directory
# Example:
#   cd_alias etc /etc
#   Means:
#     alias etc="cd /etc && echo $(pwd)"
cd_alias() {
    # If ${1} is not already in use
    if [ -d "${2}" ]
    then
        if ! command -v "${1}" >/dev/null 2>&1
        then
            alias "${1}"="cd ${2} && echo ' * Changed the Directory to' ${2}"
        fi
    fi
}


# Make a directory and cd into it
mkcd() {
    mkdir "${1}" && cd "${1}" || return 1
}
