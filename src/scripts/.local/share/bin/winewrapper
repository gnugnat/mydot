#!/bin/sh


# This file is part of mydot.

# mydot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3.

# mydot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with mydot.  If not, see <https://www.gnu.org/licenses/>.

# Copyright (c) 2020-2021, Maciej Barć <xgqt@riseup.net>
# Licensed under the GNU GPL v3 License

# wrapper for WINE


# Defaults
WINEARCH="win32"
WINEPREFIX="${HOME}/.wine"
winelog="/tmp/winelog"
do_winecfg="NO"
do_kill="NO"
do_tricks="NO"

prog_name="$(basename "${0}")"
prog_desc="wrapper for WINE"
prog_args="[FILE]"


usage() {
    cat <<EOF
Usage: ${prog_name} [OPTION]... ${prog_args}
${prog_name} - ${prog_desc}

Options:
    -V, --version    show program version
    -a, --arch       select the architecture
    -c, --config     configure WINE
    -h , --help      show avalible options
    -k, --kill       kill all running WINE processes
    -l, --log        select the log directory
    -p, --prefix     select the WINE prefix
    -t, --tricks     open Winetricks

Examples:
    -a 32            wine32 architecture
EOF
}

version() {
    cat <<EOF
${prog_name} 9999

Copyright (c) 2020-2021, Maciej Barć <xgqt@riseup.net>
Licensed under the GNU GPL v3 License
EOF
}


while [ -n "${1}" ]
do
    case "${1}"
    in
        -h | --help )
            usage
            exit 0
            ;;
        -V | -version | --version )
            version
            exit 0
            ;;
        -a | --arch )
            WINEARCH="win${2}"
            ;;
        -c | --cfg | --config )
            do_winecfg="YES"
            ;;
        -k | --kill )
            do_kill="YES"
            ;;
        -t | --tricks )
            do_tricks="YES"
            ;;
        -l | --log )
            winelog="${2}"
            ;;
        -p | --prefix )
            WINEPREFIX="${2}"
            ;;
        -* )
            version
            echo
            usage
            exit 1
            ;;
        * )
            program="${1}"
            ;;
    esac
    shift
done

if ! mkdir -p "${winelog}"
then
    echo "Cannot create WINE log directory: ${winelog}"
    exit 1
fi

export WINEARCH
export WINEPREFIX

if [ "${do_kill}" = "YES" ]
then
    echo "Killing WINE processes:"
    # shellcheck disable=1003
    for pid in $(pgrep -fi -u "${USER}" ':\\')
    do
        ps -p "${pid}" -o comm=
        kill -9 "${pid}" 2>/dev/null
    done
else
    echo "WINE from:          $(command -v wine)"
    echo "WINE architecture:  ${WINEARCH}"
    echo "WINE prefix:        ${WINEPREFIX}"
    echo "WINE log directory  ${winelog}"

    if [ "${do_winecfg}" = "YES" ]
    then
        exec winecfg >"${winelog}/wine-cfg-$(date +"%Y-%m-%d-%H-%M").log" 2>&1
    elif [ "${do_tricks}" = "YES" ]
    then
        exec winetricks >"${winelog}/wine-cfg-$(date +"%Y-%m-%d-%H-%M").log" 2>&1
    else
        if [ ! -f "${program}" ]
        then
            echo "No such file: ${program}"
            exit 1
        fi
        echo "Executing Program:  $(basename "${program}")"
        exec wine "${program}" >"${winelog}/wine-exe-$(date +"%Y-%m-%d-%H-%M").log" 2>&1
    fi
fi
