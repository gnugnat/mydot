#!/bin/sh


# This file is part of mydot.

# mydot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# mydot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with mydot.  If not, see <https://www.gnu.org/licenses/>.

# Copyright (c) 2020-2021, Maciej Barć <xgqt@riseup.net>
# Licensed under the GNU GPL v3 License

# Get info about current git repo


trap 'exit 128' INT
export PATH


blue="$(tput setaf 4)"
bold="$(tput bold)"
reset="$(tput sgr0)"
yellow="$(tput setaf 3)"
header="${bold}${blue}"
rest="${reset}${yellow}"

prog_name="$(basename "${0}")"
prog_desc="show git repository information"
prog_args="[DIRECTORY]"


usage() {
    cat <<EOF
Usage: ${prog_name} [OPTION]... ${prog_args}
${prog_name} - ${prog_desc}

Options:
    -V, --version  show program version
    -h, --help     show avalible options
EOF
}

version() {
    cat <<EOF
${prog_name} 9999

Copyright (c) 2020-2021, Maciej Barć <xgqt@riseup.net>
Licensed under the GNU GPL v3 License
EOF
}

repo_info() {
    cd "$(git rev-parse --show-toplevel)" || exit 1
    directory=$(pwd)
    remote=$(git config --get remote.origin.url 2>/dev/null)
    commits=$(git rev-list --count HEAD 2>/dev/null)
    branch=$(git branch 2>/dev/null | sed -n -e 's/^\* \(.*\)/\1/p')
    latest_tag=$(git describe --abbrev=0 --tags 2>/dev/null || echo 'N/A')
    first=$(git log --date=format:'%Y-%m-%d %H:%M:%S' --format=%cd --reverse | head -1 2>/dev/null)
    last=$(git log --date=format:'%Y-%m-%d %H:%M:%S' --format=%cd --reverse -1 2>/dev/null)
    # We sed out the "  ." part (which contains a tab)
    dir_size=$(du -sh | sed 's/	\.//g')
    changes=$(git status -s 2>/dev/null | wc -l)

    cat << INFO
${header}Directory: ${rest}${directory}${reset}
${header}Remote:    ${rest}${remote}${reset}
${header}Commits:   ${rest}${commits}${reset}
${header}Branch:    ${rest}${branch}${reset}
${header}Tag:       ${rest}${latest_tag}${reset}
${header}First:     ${rest}${first}${reset}
${header}Last:      ${rest}${last}${reset}
${header}Size:      ${rest}${dir_size}${reset}
${header}Changes:   ${rest}${changes}${reset}
INFO
}


case "${1}"
in
    -h | -help | --help )
        usage
        exit 0
        ;;
    -V | -version | --version )
        version
        exit 0
        ;;
    -* )
        version
        echo
        usage
        exit 1
        ;;
    * )
        if [ -d "${1}" ]
        then
            cd "${1}" || exit 1
        fi
        ;;
esac


repo_info
git submodule foreach "${0}" | busybox ts "${yellow}>${reset}"
