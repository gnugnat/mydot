#!/usr/bin/env zsh


# This file is part of mydot.

# mydot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# mydot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with mydot.  If not, see <https://www.gnu.org/licenses/>.

# Copyright (c) 2020-2021, Maciej BarÄ‡ <xgqt@protonmail.com>
# Licensed under the GNU GPL v3 License

#          _
#  _______| |__  _ __ ___
# |_  / __| '_ \| '__/ __|
#  / /\__ \ | | | | | (__
# /___|___/_| |_|_|  \___|
# ~/.config/zsh/zshrc


# >>> Common settings

profile="${HOME}/.profile"
[ -e "${profile}" ] && source "${profile}"


# >>> History

# Necessary to save history
HISTFILE="${ZCACHEDIR}/history"
HISTSIZE=50000
SAVEHIST="${HISTSIZE}"

# Ignore duplicates
setopt hist_ignore_all_dups

# Ignore space
setopt hist_ignore_space

# Save immediatelly, share history between terminals
setopt share_history


# >>> Completion

# Load compinit
# keep this first
autoload -U compinit
compinit -d "${ZCACHEDIR}/compdump"

# Advanced tab-completion
[ -n "${LS_COLORS}" ] && zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu select
zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'

# Correction
setopt correctall

# Extended globbing
setopt extendedglob

# Glob hidden files
setopt globdots

# Racket completion
source_file "/usr/share/racket/pkgs/shell-completion/racket-completion.zsh"


# >>> Key bindings

# Kill & Yank
# for this set Emacs key bindings
# keep this first
bindkey -e

# Ctrl-left and Ctrl-right
bindkey "^[[1;5D" backward-word
bindkey "^[[1;5C" forward-word

# Del, Home and End
bindkey "^[[3~" delete-char
bindkey "^[[F" end-of-line
bindkey "^[[H" beginning-of-line

# Remove C-d binding (list-choices/delete-char-or-list)
bindkey -r "^D"

# Reverse search
bindkey "^R" history-incremental-search-backward


# >>> Prompt theme

# VCS (git) support in prompt
setopt prompt_subst
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
zstyle ':vcs_info:git:*' formats "%b"

# Prompt init
autoload -U promptinit
promptinit

# Source appropriate theme
if [ -z "${DISPLAY}" ]
then
    # theme in tty
    source_file "${ZDOTDIR}/tty.zsh-theme"
else
    # theme in emulators
    source_file "${ZDOTDIR}/emu.zsh-theme"
fi


# >>> Plugins

# Autosuggestions
source_file "${ZDOTDIR}/plugins/autosuggestions/zsh-autosuggestions.zsh"
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=6"

# Calculator
autoload -U zcalc
ZCALCPROMPT="(ZCALC)[%1v]> "
alias zc >/dev/null && unalias zc
alias zcalc >/dev/null && unalias zcalc
# WORKAROUND: History hack
#             set HOME and ZDOTDIR to ZCACHEDIR while invoking zcalc
# https://github.com/zsh-users/zsh/blob/a7d5d239e6ab729515083a88cfaf955e078c1685/Functions/Misc/zcalc#L128
alias zcalc='HOME=${ZCACHEDIR} ZDOTDIR=${ZCACHEDIR} zcalc'
zc() {
    [[ -n "${@}" ]] && zcalc -e "${@}" || zcalc
}
alias zc='noglob zc'

# Completion for kitty
if command_exists kitty
then
    kitty + complete setup zsh | source /dev/stdin
fi

# Syntax highlighting
source_file "${ZDOTDIR}/plugins/syntax-highlighting/zsh-syntax-highlighting.zsh"


# >>> ZSH tweaks

# After changing directory: execute 'ls'
chpwd() {
    ls
}

# Chmod ZSH cache
if [ -d "${ZCACHEDIR}" ]
then
    for _cache_file in $(find "${ZCACHEDIR}" -type f 2>/dev/null)
    do
        chmod 600 "${_cache_file}"
    done
    unset _cache_file
fi

# Color
use_color=true

# Command Editor
autoload -U edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line

# Directory name to change dir
setopt autocd

# Do not beep
unsetopt beep

# Settings for appropriate terminal
case "${TERM}"
in
    xterm* )
        # Change the window title of X terminals
        precmd() {
            print -Pn "\e]0;${USER}@${HOST}:${PWD/#$HOME/\~}\a"
        }
        ;;
    dumb )
        # For some SSH sessions (Emacs)
        unsetopt zle
        unsetopt prompt_cr
        unsetopt prompt_subst
        unfunction precmd
        unfunction preexec
        PS1='$ '
        ;;
esac
