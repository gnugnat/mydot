#!/bin/sh


# This file is part of mydot.

# mydot is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# mydot is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with mydot.  If not, see <https://www.gnu.org/licenses/>.

# Copyright (c) 2020, XGQT
# Licensed under the GNU GPL v3 License

#      _
#  ___| |_ _____      __
# / __| __/ _ \ \ /\ / /
# \__ \ || (_) \ V  V /
# |___/\__\___/ \_/\_/
#     __ _ _
#    / _(_) | ___  ___
#   | |_| | |/ _ \/ __|
#  _|  _| | |  __/\__ \
# (_)_| |_|_|\___||___/


msg() {
    echo "$(tput bold)${*}$(tput sgr0)"
}

err_msg() {
    msg "${*}"
    exit 1
}

exists() {
    if command -v "${1}" >/dev/null 2>&1
    then
        return 0
    else
        return 1
    fi
}


# >>> Needed checks

# check for stow
if exists stow
then
    stow_impl=stow
elif exists xstow
then
    stow_impl=xstow
elif exists pystow
then
    stow_impl=pystow
else
    echo "There is none of supported 'stow' implementations on the sytem!"
    echo "If you don't want to use 'ln' manually please install any of:"
    echo "- stow"
    echo "- xstow"
    echo "- pystow"
    err_msg "No stow program! Exiting"
fi

msg "Stow implementation: ${stow_impl}"

# Go to mydot source
cd "$(dirname "${0}")" || err_msg "Can't cd into $(basename "${0}")"

# check needed directories
req_dirs="
    ${HOME}/.config/mpd/playlists
    ${HOME}/.emacs.d
    ${HOME}/.local/share/racket
    ${HOME}/.vnc
"
for dir in ${req_dirs}
do
    if [ -e "${dir}" ]
    then
        echo "${dir} exists, good"
    else
        mkdir -p "${dir}"
        echo "${dir} created"
    fi
done


# >>> Perform desired Stow action

# then we iterate through everything there
for target in *
do
    # check if it's a directory
    if [ -d "${target}" ]
    then
        # finally do some work
        if [ "${1}" = "remove" ]
        then
            msg "Removing $(tput bold)$target$(tput sgr0)"
            ${stow_impl} -v -t "${HOME}" -D "${target}"
        else
            msg "Installing $(tput bold)$target$(tput sgr0)"
            ${stow_impl} -v -t "${HOME}" "${target}"
        fi
    fi
done
