#!/bin/sh


#      _
#  ___| |_ _____      __
# / __| __/ _ \ \ /\ / /
# \__ \ || (_) \ V  V /
# |___/\__\___/ \_/\_/
#     __ _ _
#    / _(_) | ___  ___
#   | |_| | |/ _ \/ __|
#  _|  _| | |  __/\__ \
# (_)_| |_|_|\___||___/


msg() {
    echo "$(tput bold)${1}$(tput sgr0)"
}

err_msg() {
    msg "${1}"
    exit 1
}

exists() {
    if command -v "${1}" >/dev/null 2>&1
    then
        return 0
    else
        return 1
    fi
}


# >>> Location of mydir

# Change this if you want a different name instead of mydot.
# For exaple if you are in the same directory as a renamed mydot,
# ex.: mydot2 you can instead use:
# mydir=.
mydir=${HOME}/mydot


# >>> Needed checks

# check for stow
if exists stow
then
    stow_impl=stow
elif exists xstow
then
    stow_impl=xstow
else
    err_msg "There is no stow on the sytem! Exiting"
fi

# check for mydir
[ ! -d "${mydir}" ] && err_msg "${mydir} doesn't exist! Exiting"

# check needed directories
for chkdir in "${HOME}/.config" "${HOME}/.local/share" \
		                        "${HOME}/.emacs.d" \
		                        "${HOME}/.config/mpd/playlists"
do
    if [ -e "${chkdir}" ]
    then
        echo "${chkdir} exists, good"
    else
	    mkdir -p "${chkdir}"
	    echo "${chkdir} created"
    fi
done


# >>> Perform desired Stow action

# go to mydir
cd "${mydir}" || err_msg "Couldn't cd into ${mydir}"

# then we iterate through everything there
for target in *
do
    # check if it's a directory
    if [ -d "${target}" ]
    then
	    # finally do some work
	    if [ "${1}" = "remove" ]
        then
            msg "Removing $(tput bold)$target$(tput sgr0)"
	        ${stow_impl} -v -D "${target}"
	    else
            msg "Installing $(tput bold)$target$(tput sgr0)"
	        ${stow_impl} -v "${target}"
	    fi
    fi
done
