#!/bin/sh

# A simple Gentoo script to
# generate the kernel and
# reconfigure the system
# using sys-kernel/genkernel
# or sys-kernel/genkernel-next

# bold font
bold=$(tput bold)
# normal font
normal=$(tput sgr0)

err_msg () { echo "${bold}$1${normal}"; exit 1; }

# Become Root
if [ "$(whoami)" != root ]; then
    if [ -f ./genkerneler ]; then
	sudo ./genkerneler
    else
	sudo "$(command -v genkerneler)"
    fi
else

    # Select the kernel
    eselect kernel list
    echo "${bold}Which kernel will be used?${normal}"
    # Set the kernel
    read kvar
    eselect kernel set $kvar || err_msg "Couldn't select the kernel!"
    # go to the kernel sources
    cd /usr/src/linux || err_msg "Couldn't cd to linux sources directory!"
    echo "${bold}$(pwd)${normal}"
    echo "${bold}Remember to save the configuration as '.config'!${normal}"
    sleep 3

    # Compile the kernel
    genkernel --menuconfig --no-mrproper --makeopts=-j2 --install all || err_msg "There was an genkernel error!"
    echo "${bold}Kernel compiled...${normal}"
    sleep 2
    # Rebuild the modules
    emerge @module-rebuild || err_msg "Couldn't rebuild some packages!"
    echo "${bold}Modules rebuilt...${normal}"
    sleep 2
    # Generate grub config file
    grub-mkconfig -o /boot/grub/grub.cfg || err_msg "Couldn't generate grub.cfg!"
    echo "${bold}Grub Bootloader updated...${normal}"

    # Finish
    echo "${bold}OK
Genkerneler has done its job!${normal}"
    
fi
